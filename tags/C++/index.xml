<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Binean&#39;s Blog</title>
    <link>https://bzhou830.github.io/tags/C&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Binean&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 03 May 2017 09:16:34 +0800</lastBuildDate>
    
	<atom:link href="https://bzhou830.github.io/tags/C++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式</title>
      <link>https://bzhou830.github.io/posts/20170503DesignPatten01/</link>
      <pubDate>Wed, 03 May 2017 09:16:34 +0800</pubDate>
      
      <guid>https://bzhou830.github.io/posts/20170503DesignPatten01/</guid>
      <description>OOP的目标 理解松耦合的设计思想 掌握面向对象的设计原则（设计原则比模式更为重要） 掌握重构的技法，改善设计 掌握GOF核心设计模式 向下：深入理解三大面向对象机制 • 封装，隐藏内部实现 • 继承，复用现有代码 • 多态，改写对象行为 向上：深刻把握面向对象机制所带来的抽象意义，理解如何使用这些机制</description>
    </item>
    
    <item>
      <title>排序算法</title>
      <link>https://bzhou830.github.io/posts/20170312SortAlgo/</link>
      <pubDate>Sun, 12 Mar 2017 09:16:34 +0800</pubDate>
      
      <guid>https://bzhou830.github.io/posts/20170312SortAlgo/</guid>
      <description>1. 选择排序 选择排序的思想： 每次循环中从待排序的序列中选取一个最小值（按照升序排序），将这个最小值放到合适的位置 /// 选择排序 /// \param arr， 待排序的数组 /// \param n， 数组元素的个数 void selectionSort(int arr[], int n){ for (int i = 0; i &amp;lt; n; ++i) { int curMinIndex = i; for (int j = i+1; j &amp;lt; n; ++j) { if(arr[curMinIndex] &amp;gt; arr[j]){ curMinIndex = j; } } std::swap(arr[i], arr[curMinIndex]); } } 2. 冒泡排序 冒泡排序中每一次循环把</description>
    </item>
    
  </channel>
</rss>