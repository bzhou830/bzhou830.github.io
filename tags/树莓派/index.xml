<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>树莓派 on 拿了桔子跑呃</title>
    <link>https://bzhou830.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/</link>
    <description>Recent content in 树莓派 on 拿了桔子跑呃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 03 Jan 2020 09:16:34 +0800</lastBuildDate>
    
	<atom:link href="https://bzhou830.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>双目测距2</title>
      <link>https://bzhou830.github.io/post/20200103%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D02/</link>
      <pubDate>Fri, 03 Jan 2020 09:16:34 +0800</pubDate>
      
      <guid>https://bzhou830.github.io/post/20200103%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D02/</guid>
      <description>简介： 首先进行双目摄像头定标，获取双目摄像头内部的参数后，进行测距；本文的双目视觉测距是基于BM算法。注意：双目定标的效果会影响测距的精准度，建议大家在做双目定标时，做好一些（尽量让误差小）。 前言 首先进行双目摄像头定标，获取双目摄像头内部的参数后，进行测距；本文的双目视觉测距是基</description>
    </item>
    
    <item>
      <title>双目测距3</title>
      <link>https://bzhou830.github.io/post/20200104%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D03/</link>
      <pubDate>Fri, 03 Jan 2020 09:16:34 +0800</pubDate>
      
      <guid>https://bzhou830.github.io/post/20200104%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D03/</guid>
      <description>在双目立体匹配中，有基于SAD算法的BM、SGBM、GC立体匹配技术，但是在OpenCv3.0以后，GC算法就从legacy中去除掉了。为了查看三种算法的匹配效果及运算性能，我在Windows10中安装了OpenCv2.4.9，并以VsCode为IDE进行程序编写。 一、VsCod</description>
    </item>
    
    <item>
      <title>双目测距1</title>
      <link>https://bzhou830.github.io/post/20200101%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D01/</link>
      <pubDate>Wed, 01 Jan 2020 09:16:34 +0800</pubDate>
      
      <guid>https://bzhou830.github.io/post/20200101%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D01/</guid>
      <description>准备双目摄像头： 准备标定板 标定的开始阶段最需要用到的标定板，可以直接从opencv官网上能下载到： http://docs.opencv.org/2.4/_downloads/pattern.png 具体如下： 然后，建议固定到盒子上，方便等下拍照。 采集图片 建议左右摄像头，同时拍照，分别保存起来，可以参考 opencv 双目摄像头拍照 保存大约20到30张图片，MATLAB2016的这个工具十分</description>
    </item>
    
    <item>
      <title>树莓派推流</title>
      <link>https://bzhou830.github.io/post/20190104%E6%A0%91%E8%8E%93%E6%B4%BE%E6%8E%A8%E6%B5%81/</link>
      <pubDate>Fri, 04 Jan 2019 10:13:34 +0800</pubDate>
      
      <guid>https://bzhou830.github.io/post/20190104%E6%A0%91%E8%8E%93%E6%B4%BE%E6%8E%A8%E6%B5%81/</guid>
      <description>1.检查USB摄像头 主要检查摄像头是否被树莓派检测到（同博主上一篇树莓派的博客） 如果没有你的摄像头的信息，那么有可能你的树莓派的电源无法供应足够的电力给你的摄像头。这时你可以给你的摄像头用独立的电源线，比如有源USB hub，并重新输入lsusb命令查看。如果摄像头还是不能被识别，</description>
    </item>
    
    <item>
      <title>树莓派Camera的使用</title>
      <link>https://bzhou830.github.io/post/20190104PiCamera/</link>
      <pubDate>Fri, 04 Jan 2019 09:16:34 +0800</pubDate>
      
      <guid>https://bzhou830.github.io/post/20190104PiCamera/</guid>
      <description>参考： Raspberry Pi：https://www.raspberrypi.org/ Index of Packages：https://pypi.python.org/pypi/picamera 最新版本是 picamera 1.13：http://picamera.readthedocs.io/en/release-1.13</description>
    </item>
    
    <item>
      <title>树莓派环境配置汇总</title>
      <link>https://bzhou830.github.io/post/20190103%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Thu, 03 Jan 2019 09:16:34 +0800</pubDate>
      
      <guid>https://bzhou830.github.io/post/20190103%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9B%B8%E5%85%B3/</guid>
      <description>本文主要记录使用树莓派过程的一些问题和解决方案。系统是基于官方的Raspbian Stretch with desktop系统。 1.安装使用OpenCV 推荐使用16G或以上的卡，最好是class10以上，因为8G class6卡安装到35%就爆满了，推算安装完成要4.6G左右的空间。 OpenCV的安装可不</description>
    </item>
    
  </channel>
</rss>